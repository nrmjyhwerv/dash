<%- include('./components/wrapper') %>

<main class="flex-1 bg-gradient-to-br from-gray-900 to-gray-800">
  <!-- Notification System -->
  <div class="fixed top-4 right-4 z-50 space-y-3 w-96 max-w-full" id="notification-container">
    <% if (req.query.success == "BOUGHTRESOURCE") { %>
    <div class="animate-fade-in-up bg-green-900/30 border border-green-500/30 rounded-lg text-green-100 px-4 py-3 shadow-lg backdrop-blur-sm transition-all duration-300 hover:shadow-xl hover:shadow-green-500/10" role="alert">
      <div class="flex items-center">
        <div class="flex-shrink-0">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <p class="font-medium">Purchase Successful</p>
          <p class="text-sm opacity-90">The resources have been added to your account.</p>
        </div>
        <button onclick="this.parentElement.parentElement.remove()" class="ml-auto -mx-1.5 -my-1.5 rounded-lg p-1.5 inline-flex items-center justify-center h-8 w-8 hover:bg-green-800/30 transition-colors focus:outline-none">
          <svg class="w-5 h-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>
    </div>
    <% } %>
    
    <!-- Other notification templates... -->
  </div>

  <div class="py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
      <!-- Resource Plans -->
      <section class="animate-fade-in mb-16">
        <div class="flex flex-col md:flex-row items-start md:items-center justify-between mb-8 gap-4">
          <div>
            <h1 class="text-3xl font-bold text-white">Resource Plans</h1>
            <p class="text-gray-400 mt-2">Upgrade your plans to get more resources and premium features</p>
          </div>
          <div class="flex items-center gap-3">
            <div class="bg-blue-500/10 rounded-full p-2 animate-pulse">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div class="bg-indigo-900/30 rounded-full px-4 py-2 border border-indigo-800/50 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-indigo-400 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z" />
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd" />
              </svg>
              <span class="text-sm font-medium text-white"><%= coins %> COINS</span>
            </div>
          </div>
        </div>

        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          <% resourcePlans.forEach(plan => { %>
          <div class="relative flex flex-col rounded-xl shadow-lg overflow-hidden bg-gradient-to-br from-gray-800/60 to-gray-900/60 border border-gray-700 hover:border-blue-500/50 transition-all duration-300 hover:shadow-blue-500/10 hover:-translate-y-1 transform group">
            <% if (plan.hasPlan) { %>
              <div class="absolute top-0 right-0 bg-green-500 text-white text-xs font-bold px-3 py-1 rounded-bl-lg rounded-tr-lg z-10">
                Active
              </div>
            <% } %>
            <div class="p-6 flex flex-col justify-between flex-1">
              <div>
                <h3 class="text-xl font-semibold text-white mb-2"><%= plan.name %></h3>
                <div class="mb-6">
                  <span class="text-3xl font-bold text-white"><%= plan.price %></span>
                  <span class="text-lg font-medium text-gray-300"> coins</span>
                </div>
                <div class="border-t border-gray-700 pt-4">
                  <p class="text-base text-gray-300 mb-3 font-medium">Includes:</p>
                  <ul class="space-y-3">
                    <li class="flex items-center">
                      <div class="bg-blue-500/10 p-1 rounded-full mr-3">
                        <svg class="h-4 w-4 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                      </div>
                      <span class="text-gray-300"><%= plan.resources.cpu %> CPU</span>
                    </li>
                    <li class="flex items-center">
                      <div class="bg-purple-500/10 p-1 rounded-full mr-3">
                        <svg class="h-4 w-4 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                      </div>
                      <span class="text-gray-300"><%= plan.resources.ram %> MB RAM</span>
                    </li>
                    <li class="flex items-center">
                      <div class="bg-green-500/10 p-1 rounded-full mr-3">
                        <svg class="h-4 w-4 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                      </div>
                      <span class="text-gray-300"><%= plan.resources.disk %> MB Disk</span>
                    </li>
                    <% if (plan.bonus) { %>
                    <li class="flex items-center">
                      <div class="bg-yellow-500/10 p-1 rounded-full mr-3">
                        <svg class="h-4 w-4 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4H5z" />
                        </svg>
                      </div>
                      <span class="text-gray-300"><%= plan.bonus %></span>
                    </li>
                    <% } %>
                  </ul>
                </div>
              </div>
              <% if (plan.hasPlan) { %>
                <button class="mt-6 w-full py-3 px-4 rounded-lg bg-green-900/30 border border-green-500/50 text-green-300 font-medium cursor-not-allowed flex items-center justify-center group-hover:bg-green-900/40 transition-colors">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                  Current Plan
                </button>
              <% } else { %>
              <a href="../buyplan?plan=<%= plan.id %>" class="mt-6 group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 shadow-md hover:shadow-lg transition-all duration-200">
                <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-200 group-hover:text-blue-100" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </span>
                Purchase Plan
              </a>
              <% } %>
            </div>
          </div>
          <% }) %>
        </div>
      </section>

      <!-- Divider -->
      <div class="relative my-12">
        <div class="absolute inset-0 flex items-center" aria-hidden="true">
          <div class="w-full border-t border-gray-700/50"></div>
        </div>
        <div class="relative flex justify-center">
          <span class="px-3 bg-gray-800 text-sm text-gray-400 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
            </svg>
            Individual Resources
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
            </svg>
          </span>
        </div>
      </div>

      <!-- Individual Resources -->
      <section class="mb-16">
        <div class="flex flex-col md:flex-row items-start md:items-center justify-between mb-8 gap-4">
          <div>
            <h2 class="text-2xl font-bold text-white">Individual Resources</h2>
            <p class="text-gray-400 mt-2">Purchase specific resources to customize your server needs</p>
          </div>
          <div class="flex items-center gap-3">
            <button onclick="toggleResourceView()" class="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-sm text-gray-200 transition-colors flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" />
              </svg>
              Toggle View
            </button>
          </div>
        </div>

        <!-- Grid View (Default) -->
        <div id="grid-view" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <!-- RAM Card -->
          <div class="bg-gradient-to-br from-gray-800/60 to-gray-900/60 border border-gray-700 rounded-xl overflow-hidden transition-all hover:border-indigo-500/50 hover:shadow-lg hover:shadow-indigo-500/10">
            <div class="p-6">
              <div class="flex items-center justify-between mb-4">
                <div class="flex items-center space-x-3">
                  <div class="p-2 rounded-lg bg-indigo-500/10">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                  </div>
                  <h3 class="text-lg font-semibold text-white">Memory</h3>
                </div>
                <span class="px-3 py-1 rounded-full text-xs font-medium bg-indigo-900/30 text-indigo-300">RAM</span>
              </div>
              
              <p class="text-sm text-gray-400 mb-6">Increase your server's memory allocation for better performance.</p>
              
              <div class="flex items-center justify-between mb-4">
                <div>
                  <span class="text-2xl font-bold text-white">1GB</span>
                  <span class="text-sm text-gray-400 ml-1">per unit</span>
                </div>
                <span class="text-xl font-bold text-white">6000 COINS</span>
              </div>
              
              <div class="flex gap-2">
                <button onclick="showCustomAmountModal('ram', 6000)" class="flex-1 px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium rounded-lg transition-colors">
                  Custom Amount
                </button>
                <a href="/buyresource?resource=ram&amount=1" class="flex-1 px-4 py-2 bg-indigo-800 hover:bg-indigo-900 text-white text-sm font-medium rounded-lg transition-colors text-center">
                  Buy Now
                </a>
              </div>
            </div>
          </div>
          
          <!-- CPU Card -->
          <div class="bg-gradient-to-br from-gray-800/60 to-gray-900/60 border border-gray-700 rounded-xl overflow-hidden transition-all hover:border-purple-500/50 hover:shadow-lg hover:shadow-purple-500/10">
            <div class="p-6">
              <div class="flex items-center justify-between mb-4">
                <div class="flex items-center space-x-3">
                  <div class="p-2 rounded-lg bg-purple-500/10">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                    </svg>
                  </div>
                  <h3 class="text-lg font-semibold text-white">CPU Cores</h3>
                </div>
                <span class="px-3 py-1 rounded-full text-xs font-medium bg-purple-900/30 text-purple-300">PROCESSING</span>
              </div>
              
              <p class="text-sm text-gray-400 mb-6">Add more CPU power to handle increased workloads.</p>
              
              <div class="flex items-center justify-between mb-4">
                <div>
                  <span class="text-2xl font-bold text-white">1 Core</span>
                  <span class="text-sm text-gray-400 ml-1">per unit</span>
                </div>
                <span class="text-xl font-bold text-white">12000 COINS</span>
              </div>
              
              <div class="flex gap-2">
                <button onclick="showCustomAmountModal('cpu', 12000)" class="flex-1 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white text-sm font-medium rounded-lg transition-colors">
                  Custom Amount
                </button>
                <a href="/buyresource?resource=cpu&amount=1" class="flex-1 px-4 py-2 bg-purple-800 hover:bg-purple-900 text-white text-sm font-medium rounded-lg transition-colors text-center">
                  Buy Now
                </a>
              </div>
            </div>
          </div>
          
          <!-- Storage Card -->
          <div class="bg-gradient-to-br from-gray-800/60 to-gray-900/60 border border-gray-700 rounded-xl overflow-hidden transition-all hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/10">
            <div class="p-6">
              <div class="flex items-center justify-between mb-4">
                <div class="flex items-center space-x-3">
                  <div class="p-2 rounded-lg bg-blue-500/10">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H5a1 1 0 01-1-1V5z" />
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8m4-4v4m4-8v8" />
                    </svg>
                  </div>
                  <h3 class="text-lg font-semibold text-white">Storage</h3>
                </div>
                <span class="px-3 py-1 rounded-full text-xs font-medium bg-blue-900/30 text-blue-300">DISK</span>
              </div>
              
              <p class="text-sm text-gray-400 mb-6">Expand your server's storage capacity for more files and data.</p>
              
              <div class="flex items-center justify-between mb-4">
                <div>
                  <span class="text-2xl font-bold text-white">1GB</span>
                  <span class="text-sm text-gray-400 ml-1">per unit</span>
                </div>
                <span class="text-xl font-bold text-white">2000 COINS</span>
              </div>
              
              <div class="flex gap-2">
                <button onclick="showCustomAmountModal('disk', 2000)" class="flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-lg transition-colors">
                  Custom Amount
                </button>
                <a href="/buyresource?resource=disk&amount=1" class="flex-1 px-4 py-2 bg-blue-800 hover:bg-blue-900 text-white text-sm font-medium rounded-lg transition-colors text-center">
                  Buy Now
                </a>
              </div>
            </div>
          </div>
        </div>

        <!-- Table View (Hidden by default) -->
        <div id="table-view" class="hidden overflow-x-auto rounded-lg border border-gray-700">
          <table class="min-w-full divide-y divide-gray-700">
            <thead class="bg-gray-800/60">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Resource</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Description</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Unit</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Price</th>
                <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-gray-800/30 divide-y divide-gray-700">
              <tr>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="flex items-center">
                    <div class="flex-shrink-0 h-10 w-10 bg-indigo-500/10 rounded-lg flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                    </div>
                    <div class="ml-4">
                      <div class="text-sm font-medium text-white">Memory</div>
                      <div class="text-sm text-gray-400">RAM</div>
                    </div>
                  </div>
                </td>
                <td class="px-6 py-4">
                  <div class="text-sm text-gray-300">Increase your server's memory allocation for better performance</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-white">1GB</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-white">6000 COINS</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <button onclick="showCustomAmountModal('ram', 6000)" class="text-indigo-400 hover:text-indigo-300 mr-3">Custom</button>
                  <a href="/buyresource?resource=ram&amount=1" class="text-green-400 hover:text-green-300">Buy Now</a>
                </td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="flex items-center">
                    <div class="flex-shrink-0 h-10 w-10 bg-purple-500/10 rounded-lg flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                      </svg>
                    </div>
                    <div class="ml-4">
                      <div class="text-sm font-medium text-white">CPU Cores</div>
                      <div class="text-sm text-gray-400">Processing</div>
                    </div>
                  </div>
                </td>
                <td class="px-6 py-4">
                  <div class="text-sm text-gray-300">Add more CPU power to handle increased workloads</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-white">1 Core</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-white">12000 COINS</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <button onclick="showCustomAmountModal('cpu', 12000)" class="text-indigo-400 hover:text-indigo-300 mr-3">Custom</button>
                  <a href="/buyresource?resource=cpu&amount=1" class="text-green-400 hover:text-green-300">Buy Now</a>
                </td>
              </tr>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="flex items-center">
                    <div class="flex-shrink-0 h-10 w-10 bg-blue-500/10 rounded-lg flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H5a1 1 0 01-1-1V5z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8m4-4v4m4-8v8" />
                      </svg>
                    </div>
                    <div class="ml-4">
                      <div class="text-sm font-medium text-white">Storage</div>
                      <div class="text-sm text-gray-400">Disk Space</div>
                    </div>
                  </div>
                </td>
                <td class="px-6 py-4">
                  <div class="text-sm text-gray-300">Expand your server's storage capacity for more files</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-white">1GB</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-white">2000 COINS</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <button onclick="showCustomAmountModal('disk', 2000)" class="text-indigo-400 hover:text-indigo-300 mr-3">Custom</button>
                  <a href="/buyresource?resource=disk&amount=1" class="text-green-400 hover:text-green-300">Buy Now</a>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </section>

      <!-- Promo Code Section -->
      <section class="bg-gradient-to-br from-gray-800/60 to-gray-900/60 border border-gray-700 rounded-xl p-6 mb-8">
        <h3 class="text-lg font-semibold text-white mb-4">Redeem Promo Code</h3>
        <p class="text-sm text-gray-400 mb-4">Enter a promo code below to claim free resources or coins.</p>
        
        <div class="flex flex-col sm:flex-row gap-3">
          <input 
            type="text" 
            id="claim-code"
            placeholder="Enter promo code"
            class="flex-1 bg-gray-900 border border-gray-700 focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 rounded-lg px-4 py-3 text-sm text-white placeholder-gray-500 transition"
          >
          <button 
            onclick="claimPromoCode()"
            class="px-6 py-3 bg-gradient-to-r from-indigo-600 to-indigo-700 hover:from-indigo-700 hover:to-indigo-800 text-white text-sm font-medium rounded-lg transition-all flex items-center justify-center shadow-md hover:shadow-lg"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            Redeem Code
          </button>
        </div>
      </section>
    </div>
  </div>
</main>

<!-- Custom Amount Modal -->
<div id="custom-amount-modal" class="fixed inset-0 z-50 hidden overflow-y-auto">
  <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 transition-opacity" aria-hidden="true">
      <div class="absolute inset-0 bg-gray-900/80 backdrop-blur-sm" onclick="hideCustomAmountModal()"></div>
    </div>
    
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
    
    <div class="inline-block align-bottom bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="px-6 py-5 bg-gray-900 border-b border-gray-700">
        <h3 class="text-lg font-medium text-white" id="modal-title">
          Purchase <span id="resource-name">RAM</span>
        </h3>
      </div>
      <div class="px-6 py-4">
        <div class="mb-4">
          <label for="resource-amount" class="block text-sm font-medium text-gray-300 mb-2">
            Amount to purchase
          </label>
          <div class="mt-1 relative rounded-md shadow-sm">
            <input 
              type="number" 
              id="resource-amount" 
              class="bg-gray-700 border border-gray-600 text-white placeholder-gray-400 focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-3 pr-12 py-3 rounded-md"
              placeholder="Enter amount"
              min="1"
              value="1"
            >
            <div class="absolute inset-y-0 right-0 flex items-center">
              <span class="text-gray-300 px-3" id="resource-unit">
                GB
              </span>
            </div>
          </div>
          <p class="mt-2 text-sm text-gray-400">
            Price per unit: <span id="unit-price">400</span> COINS
          </p>
        </div>
        <div class="bg-gray-700/50 rounded-lg p-4 mb-4">
          <div class="flex justify-between items-center">
            <span class="text-sm font-medium text-gray-300">Total Cost:</span>
            <span class="text-xl font-bold text-white" id="total-cost">400 COINS</span>
          </div>
          <div class="flex justify-between items-center mt-1">
            <span class="text-sm font-medium text-gray-300">Your Balance:</span>
            <span class="text-lg font-medium <%= coins < 400 ? 'text-red-400' : 'text-green-400' %>">
              <%= coins %> COINS
            </span>
          </div>
        </div>
      </div>
      <div class="px-6 py-4 bg-gray-800 border-t border-gray-700 flex justify-between">
        <button 
          type="button" 
          onclick="hideCustomAmountModal()"
          class="px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg text-sm font-medium transition-colors"
        >
          Cancel
        </button>
        <a 
          href="#" 
          id="purchase-link"
          class="px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg text-sm font-medium transition-colors"
        >
          Confirm Purchase
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  // Toggle between grid and table view
  function toggleResourceView() {
    const gridView = document.getElementById('grid-view');
    const tableView = document.getElementById('table-view');
    
    if (gridView.classList.contains('hidden')) {
      gridView.classList.remove('hidden');
      tableView.classList.add('hidden');
    } else {
      gridView.classList.add('hidden');
      tableView.classList.remove('hidden');
    }
  }
  
  // Custom amount modal functions
  let currentResource = '';
  let currentPrice = 0;
  
  function showCustomAmountModal(resource, price) {
    currentResource = resource;
    currentPrice = price;
    
    // Set modal content based on resource
    const resourceName = document.getElementById('resource-name');
    const resourceUnit = document.getElementById('resource-unit');
    const unitPrice = document.getElementById('unit-price');
    
    if (resource === 'ram') {
      resourceName.textContent = 'RAM';
      resourceUnit.textContent = 'GB';
      unitPrice.textContent = price;
    } else if (resource === 'cpu') {
      resourceName.textContent = 'CPU Cores';
      resourceUnit.textContent = 'Cores';
      unitPrice.textContent = price;
    } else if (resource === 'disk') {
      resourceName.textContent = 'Disk Space';
      resourceUnit.textContent = 'GB';
      unitPrice.textContent = price;
    }
    
    // Update total cost when amount changes
    const amountInput = document.getElementById('resource-amount');
    amountInput.addEventListener('input', updateTotalCost);
    amountInput.value = 1;
    updateTotalCost();
    
    // Show modal
    document.getElementById('custom-amount-modal').classList.remove('hidden');
  }
  
  function hideCustomAmountModal() {
    document.getElementById('custom-amount-modal').classList.add('hidden');
    const amountInput = document.getElementById('resource-amount');
    amountInput.removeEventListener('input', updateTotalCost);
  }
  
  function updateTotalCost() {
    const amountInput = document.getElementById('resource-amount');
    const totalCostElement = document.getElementById('total-cost');
    const purchaseLink = document.getElementById('purchase-link');
    
    const amount = parseInt(amountInput.value) || 0;
    const totalCost = amount * currentPrice;
    
    totalCostElement.textContent = totalCost + ' COINS';
    
    // Update purchase link
    if (amount > 0) {
      purchaseLink.href = `/buyresource?resource=${currentResource}&amount=${amount}`;
      purchaseLink.classList.remove('bg-gray-500', 'cursor-not-allowed');
      purchaseLink.classList.add('bg-indigo-600', 'hover:bg-indigo-700');
    } else {
      purchaseLink.href = '#';
      purchaseLink.classList.remove('bg-indigo-600', 'hover:bg-indigo-700');
      purchaseLink.classList.add('bg-gray-500', 'cursor-not-allowed');
    }
    
    // Check if user has enough balance
    if (totalCost > <%= coins %>) {
      totalCostElement.classList.add('text-red-400');
      totalCostElement.classList.remove('text-white');
    } else {
      totalCostElement.classList.remove('text-red-400');
      totalCostElement.classList.add('text-white');
    }
  }
  
  // Promo code redemption
  async function claimPromoCode() {
    const code = document.getElementById('claim-code').value.trim();
    const button = document.querySelector('#claim-code + button');
    const originalButtonText = button.innerHTML;
    
    if (!code) {
      showNotification('Please enter a promo code.', 'error');
      return;
    }
    
    // Show loading state
    button.innerHTML = `
      <svg class="animate-spin -ml-1 mr-2 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
      Processing...
    `;
    button.disabled = true;
    
    try {
      const response = await fetch('/claim-promocode', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ code }),
      });
      
      const data = await response.json();
      
      if (response.ok) {
        showNotification(data.message || 'Promo code redeemed successfully!', 'success');
        setTimeout(() => {
          window.location.reload();
        }, 1500);
      } else {
        showNotification(data.error || 'Failed to redeem promo code.', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      showNotification('An error occurred while redeeming the code.', 'error');
    } finally {
      button.innerHTML = originalButtonText;
      button.disabled = false;
    }
  }
  
  // Notification system
  function showNotification(message, type = 'info') {
    const container = document.getElementById('notification-container');
    const id = 'notification-' + Date.now();
    
    let icon, bgColor, borderColor, textColor;
    
    switch (type) {
      case 'success':
        icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>`;
        bgColor = 'bg-green-900/30';
        borderColor = 'border-green-500/30';
        textColor = 'text-green-100';
        break;
      case 'error':
        icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 00-1.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
        </svg>`;
        bgColor = 'bg-red-900/30';
        borderColor = 'border-red-500/30';
        textColor = 'text-red-100';
        break;
      case 'warning':
        icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
        </svg>`;
        bgColor = 'bg-yellow-900/30';
        borderColor = 'border-yellow-500/30';
        textColor = 'text-yellow-100';
        break;
      default:
        icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
        </svg>`;
        bgColor = 'bg-blue-900/30';
        borderColor = 'border-blue-500/30';
        textColor = 'text-blue-100';
    }
    
    const notification = document.createElement('div');
    notification.id = id;
    notification.className = `animate-fade-in-up ${bgColor} ${borderColor} rounded-lg ${textColor} px-4 py-3 shadow-lg backdrop-blur-sm transition-all duration-300 hover:shadow-xl`;
    notification.innerHTML = `
      <div class="flex items-center">
        <div class="flex-shrink-0">
          ${icon}
        </div>
        <div class="ml-3">
          <p class="text-sm">${message}</p>
        </div>
        <button onclick="document.getElementById('${id}').remove()" class="ml-auto -mx-1.5 -my-1.5 rounded-lg p-1.5 inline-flex items-center justify-center h-8 w-8 hover:bg-gray-800/30 transition-colors focus:outline-none">
          <svg class="w-5 h-5 ${textColor}" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>
    `;
    
    container.appendChild(notification);
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
      const element = document.getElementById(id);
      if (element) {
        element.classList.add('animate-fade-out');
        setTimeout(() => element.remove(), 300);
      }
    }, 5000);
  }
</script>

<%- include('./components/footer') %>
